---

- name: delete the local logs folder if exist
  local_action:
    module: file
    path: "../logs/"
    state: absent
  run_once: yes

- name: delete local files folder if exists
  local_action:
    module: file
    path: "../files/"
    state: absent
  run_once: yes

- name: create new folder to store log files locally
  local_action:
    module: file
    path: "../logs/{{ inventory_hostname }}/"
    state: directory

- name: create new folder to store files locally
  local_action:
    module: file
    path: "../files/"
    state: directory
  run_once: yes

- name: check all the log files from 1st log location
  find:
    age: -2h
    file_type: any
    paths: "{{path1}}{{ num }}{{path2}}{{ num }}"
  register: find_output

- debug:
    msg: "{{path1}}{{ num }}{{path2}}{{ num }}"
    verbosity: 2

- name: create a list with log files
  set_fact:
    files: '{{ files + [item.path] }}'
  with_items: "{{ find_output.files}}"

- name: check all the log files from 2nd log location
  find:
    age: -2h
    file_type: any
    paths: "{{path3}}{{ num }}"
  register: find_output2

- debug:
    msg: "{{path3}}{{ num }}"
    verbosity: 2

- name: add the new files to the list of files
  set_fact:
    files: '{{ files + [item.path] }}'
  with_items: "{{ find_output2.files}}"

- debug:
    verbosity: 2
    var: files

- name: copy all files to local machine
  fetch:
    src: "{{ item }}"
    dest: "../logs/{{ inventory_hostname }}/"
    flat: yes
    fail_on_missing: no
    validate_checksum: no
  register: fetch_output
  with_items: "{{ files }}"
  when: files|length > 0

- debug:
    verbosity: 2
    var: fetch_output

- name: create a list of files which copied to local machine
  set_fact:
    copies: '{{ copies + [item.dest] }}'
  with_items: "{{ fetch_output.results}}"

- debug:
    var: copies
    verbosity: 2

- name: write the list of files to a local file
  local_action:
    module: lineinfile
    create: yes
    dest: "../files/{{ inventory_hostname }}"
    line: "{{ item }}"
  with_list: "{{copies}}"

